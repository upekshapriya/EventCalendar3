<?php
/*
Copyright (c) 2006 Darrell Schulte, 2008 Alex Tingle.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/


require_once(dirname(__FILE__).'/multiwidget.php');


class ec3_EventListWidget extends MultiWidget
{
  function __construct()
  {
    MultiWidget::__construct(
        'ec3-event-list', // id_base
        __('Upcoming Events','ec3'), // name
        array('description' =>
              __('Display upcoming events as a list.','ec3')
                  . ' (Event-Calendar '. __('Plugin') .')' )
      );
  }


  // Echo the actual widget content. Subclasses should over-ride this function
  // to generate their widget code.
  function widget($args,$instance)
  {
    extract($args,EXTR_SKIP);
    echo $before_widget . $before_title;
    echo ec3_widget_title($instance['title'],'Upcoming Events');
    echo $after_title;
    if(ec3_check_installed(__('Upcoming Events','ec3')))
    {
      // Parse $limit:
      //  NUMBER      - limits number of posts
      //  NUMBER days - next NUMBER of days
      $limit = $instance['limit'];
      $num =intval($limit);
      $query = new WP_Query();
      if(preg_match('/^ *([0-9]+) *d(ays?)?/',$limit,$matches))
          $query->query( 'ec3_days='.intval($matches[1]) );
      elseif($num>0)
          $query->query( 'ec3_after=today&posts_per_page='.$num );
      elseif($num<0)
          $query->query( 'ec3_before=today&order=asc&posts_per_page='.abs($num) );
      else
          $query->query( 'ec3_after=today&posts_per_page=5' );

      echo "<ul class='ec3_events'>";
      echo '<!-- Generated by Event-Calendar v'.ec3_get_version().' -->'."\n";
      if($query->have_posts())
      {
        $current_date=false;
        for($evt=ec3_iter_all_events_q($query); $evt->valid(); $evt->next())
        {
          // Date changed?
          $date=ec3_get_date();
          if(!$current_date || $current_date!=$date)
          {
            if($current_date)
                echo "</ul></li>\n";
            echo "<li class='ec3_list ec3_list_day'>$date:\n<ul>\n";
            $current_date=$date;
          }
          // Print the event.
          echo ' <li><a href="'.get_permalink().'">'
            .  get_the_title().' ('.ec3_get_start_time().')</a></li>'."\n";
        }
        if($current_date)
            echo "</ul></li>\n";
      }
      else
      {
        echo "<li>".__('No events.','ec3')."</li>\n";
      }
      echo "</ul>\n";
    }
    echo $after_widget;
  }


  // Update a particular instance.
  // This function should check that $new_instance is set correctly.
  // The newly calculated value of $instance should be returned.
  function control_update($new_instance, $old_instance)
  {
    if( !isset($new_instance['title']) ) // user clicked cancel
        return false;
    $instance = $old_instance;
    $instance['title'] = strip_tags(stripslashes($new_instance['title']));
    $instance['limit'] = strip_tags(stripslashes($new_instance['limit']));
    return $instance;
  }


  // Echo a control form for the current instance.
  // The form has inputs with names like widget-ID_BASE[$number][FIELD_NAME]
  // so that all data for that instance of the widget are stored in one
  // $_POST variable: $_POST['widget-ID_BASE'][$number]
  function control_form($instance)
  {
    $limit = $instance['limit'];
    if( empty($limit) )
      $limit = 5;
    else
      $limit = htmlspecialchars($limit,ENT_QUOTES);

    $limit_title =
      __("Examples: '5', '5 days', '5d'. To display recent past events, use a negative number: '-5'.");
?>
    <p>
     <label for="<?php echo $this->get_field_id('title') ?>">
      <?php _e('Title:'); ?>
      <input class="widefat" id="<?php echo $this->get_field_id('title') ?>"
       name="<?php echo $this->get_field_name('title') ?>" type="text"
       value="<?php echo htmlspecialchars($instance['title'],ENT_QUOTES) ?>" />
     </label>
    </p>

    <p>
     <label for="<?php echo $this->get_field_id('limit') ?>"
      title="<?php echo $limit_title ?>">
      <?php _e('Number of events','ec3') ?>:
      <input class="widefat" style="width: 50px; text-align: center;"
       id="<?php echo $this->get_field_id('limit') ?>"
       name="<?php echo $this->get_field_name('limit') ?>" type="text"
       value="<?php echo $limit ?>" />
     </label>
    </p>

    <p>
     <a href="options-general.php?page=ec3_admin">
      <?php _e('Go to Event Calendar Options','ec3') ?>.</a>
    </p>

    <input type="hidden" id="<?php echo $this->get_field_id('submit') ?>"
     name="<?php echo $this->get_field_name('submit') ?>" value="1" />
<?php
  }

} // end class ec3_EventListWidget


// Finally create an object for the widget-type and register it.
$ec3_event_list_widget = new ec3_EventListWidget();
add_action( 'widgets_init', array($ec3_event_list_widget,'register') );

?>
